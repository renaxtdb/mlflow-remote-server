version: "2"
services:
  minio:
    image: minio/minio
    ports:
      - "9000:9000"
    volumes:
      - ./logs/artifacts:/data
    environment:
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
    command: server /data

  createbuckets:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set minio http://minio:9000 ${MINIO_ACCESS_KEY} ${MINIO_SECRET_KEY};
      /usr/bin/mc mb minio/mlflow;
      /usr/bin/mc policy set public minio/mlflow;
      exit 0;
      "

  db:
    image: postgres:11
    user: postgres
    volumes:
      - ./logs/db:/var/lib/postgresql/data
    ports:
      - ${POSTGRES_POERT}:5432
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB_NAME}
      TZ: "Asia/Tokyo"

  mlflow:
    build:
      context: .
      dockerfile: config/mlflow/Dockerfile
      args:
        - PYTHON_VERSION=${PYTHON_VERSION}
        - DEBIAN_VERSION=${DEBIAN_VERSION}
    environment:
      MLFLOW_S3_ENDPOINT_URL: ${MINIO_URL}
      AWS_ACCESS_KEY_ID: ${MINIO_ACCESS_KEY}
      AWS_SECRET_ACCESS_KEY: ${MINIO_SECRET_KEY}
    volumes:
      - ${MOUNT_PATH}:/home/work
    ports:
      - 5050:5050
    command: bash -c "mlflow server --backend-store-uri ${DB_URL} --default-artifact-root ${ARTIFACT_PATH} --host 0.0.0.0 --port 5050"
    depends_on:
      - db

  jupyter:
    build:
      context: .
      dockerfile: config/jupyter/Dockerfile
      args:
        - PYTHON_VERSION=${PYTHON_VERSION}
        - DEBIAN_VERSION=${DEBIAN_VERSION}
        - JUPYTER_PORT_NO=${JUPYTER_PORT_NO}
    image: jupyter-mlflow:${PYTHON_VERSION}
    restart: always
    volumes:
      - ${MOUNT_PATH}:/home/work
    environment:
      TZ: Asia/Tokyo
      AWS_ACCESS_KEY_ID: ${MINIO_ACCESS_KEY}
      AWS_SECRET_ACCESS_KEY: ${MINIO_SECRET_KEY}
      MLFLOW_S3_ENDPOINT_URL: ${MINIO_URL}
      PREFECT__SERVER__HOST: http://172.17.0.1
      PREFECT__SERVER__PORT: 4200
    ports:
      - "${JUPYTER_PORT_NO}:${JUPYTER_PORT_NO}"
    entrypoint:
      - bash
    command:
      - -c
      - |
        jupyter lab --ip=0.0.0.0 --port=${JUPYTER_PORT_NO} --allow-root --no-browser --NotebookApp.notebook_dir='/home/work' --NotebookApp.token=''
    logging:
      driver: json-file
      options:
        max-file: '1'
        max-size: 3m
